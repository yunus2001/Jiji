{
    "openapi": "3.0.0",
    "info": {
        "title": "API TICKETS",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000"
        }
    ],
    "paths": {
        "/api/items": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Get all Items posted by a seller",
                "description": "As a Buyer, I want to view all items on the home page with price, description, image and the location of the Seller so that I can perform an action to show my interest.",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status values that needed to be considered for filter",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "available",
                            "enum": [
                                "available",
                                "pending",
                                "sold"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Items"
                ],
                "summary": " create Items",
                "description": "As a Seller, I want to create a new Item with price, description, and one image so that I can put it up for sale.",
                "operationId": "store",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price",
                                    "description",
                                    "quantity",
                                    "image"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "text"
                                    },
                                    "price": {
                                        "type": "text"
                                    },
                                    "description": {
                                        "type": "text"
                                    },
                                    "quantity": {
                                        "type": "text"
                                    },
                                    "image": {
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/items/{id}/orders": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "show order on item",
                "description": "As a Seller, I want to view each Item I added and see the details of the Item along with Buyers that are interested in the item so that I can contact the ",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Item to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplier"
                    },
                    "404": {
                        "description": "Item not found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/items/{id}": {
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Delete a single Item",
                "description": "As a Seller, I want to delete Items that I choose so that I can remove them from my list of Items.",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Item to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplier"
                    },
                    "404": {
                        "description": "Item not found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/myItems": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "Seller Items",
                "description": "As a Seller, I want to see my items and their descriptions in a list so that I can view them all on the same page.",
                "operationId": "myIndex",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status values that needed to be considered for filter",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "default": "available",
                            "enum": [
                                "available",
                                "pending",
                                "sold"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/myItems/{id}/orders": {
            "get": {
                "tags": [
                    "Items"
                ],
                "summary": "show order on myItem",
                "description": "Returns a single Item",
                "operationId": "showMyItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Item to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplier"
                    },
                    "404": {
                        "description": "Item not found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/myItems/{id}": {
            "delete": {
                "tags": [
                    "Items"
                ],
                "summary": "Delete a single Item  from myItems",
                "description": "Delete a single Item",
                "operationId": "destroyMyItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of Item to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplier"
                    },
                    "404": {
                        "description": "Item not found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/items/{id}/orders/{buyer}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "select interested buyer",
                "description": "As a Seller, I want to select an interested Buyer and mark an item as “Sold” so that the Item will no longer be listed on the home page.",
                "operationId": "selectInterestedBuyer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Item id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "buyer",
                        "in": "path",
                        "description": "Buyer id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplier"
                    },
                    "404": {
                        "description": "Item not found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/items/{id}/order": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Order an item",
                "description": "As a Buyer, I want to perform an action to show my interest for an Item and enter my name, email and location so that the Seller can see my information and contact me later.",
                "operationId": "orderStore",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Item to make Order",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "quantity",
                                    "country",
                                    "street",
                                    "state",
                                    "firstName",
                                    "email",
                                    "lastName",
                                    "local_government"
                                ],
                                "properties": {
                                    "firstName": {
                                        "type": "text"
                                    },
                                    "lastName": {
                                        "type": "text"
                                    },
                                    "email": {
                                        "type": "email"
                                    },
                                    "state": {
                                        "type": "street"
                                    },
                                    "street": {
                                        "type": "street"
                                    },
                                    "local_government": {
                                        "type": "text"
                                    },
                                    "country": {
                                        "type": "text"
                                    },
                                    "quantity": {
                                        "type": "text"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register a user",
                "operationId": "register",
                "parameters": [
                    {
                        "name": "first_name",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_name",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "street",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "local_government",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User Login",
                "description": "Login User Here",
                "operationId": "login",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "email"
                                    },
                                    "password": {
                                        "type": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Login Successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "Login Successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": " As a User Logout",
                "description": "you can logout User Here",
                "operationId": "logout",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "email"
                                    },
                                    "password": {
                                        "type": "password"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "logout Successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "200": {
                        "description": "logout Successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearer_token": {
                "type": "apiKey",
                "description": "Sanctum Authentication ",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}